// Licensed GNU LGPL v2.1 or later: http://www.gnu.org/licenses/lgpl.html
include "bse/bsecxxmodule.idl";
namespace Bse {
enum LadderFilterType {
  LADDER_FILTER_LP4      = Enum (_("LP4"),      _("4 pole lowpass, 24db/octave")),
  LADDER_FILTER_LP2      = Enum (_("LP2"),      _("2 pole lowpass, 12db/octave")),
  LADDER_FILTER_HP4      = Enum (_("HP4"),      _("4 pole highpass, 24db/octave")),
  LADDER_FILTER_HP2      = Enum (_("HP2"),      _("2 pole highpass, 12db/octave"))
};

enum LadderImplType {
  LADDER_IMPL_LINEAR            = Enum (_("Linear")),
  LADDER_IMPL_NON_LINEAR        = Enum (_("Non Linear")),
  LADDER_IMPL_NON_LINEAR_CHEAP  = Enum (_("Non Linear (cheap)"))
};

interface Ladder : Effect {
  Info    authors   = "Stefan Westerfeld";
  Info    license   = _("GNU Lesser General Public License");
  Info    category  = _("/Filters/Ladder");
  Info    blurb     = _("Multimode ladder filter");

  IStream audio_in1  = Stream (_("Audio In1"), _("Audio input 1"));
  IStream audio_in2  = Stream (_("Audio In2"), _("Audio input 2"));
  IStream freq_in    = Stream (_("Freq In"), _("Frequency Input"));
  IStream freq_mod_in = Stream (_("Freq Mod In"), _("Frequency Modulation Input"));

  OStream audio_out1 = Stream (_("Audio Out1"), _("Filtered audio output 1"));
  OStream audio_out2 = Stream (_("Audio Out2"), _("Filtered audio output 2"));

  group _("Parameters") {
    Real cutoff           = Freq (_("Cutoff"), _("Cutoff Frequency"), 440.0, STANDARD);
    Real freq_mod_octaves = (_("Freq Mod [Octaves]"), _("Exponential frequency modulation: Number of Octaves"), 1.0, -5.0, 5.0, 0.01, STANDARD ":f:scale");

    Real resonance  = Perc (_("Resonance [%]"), _("Set the amount of resonance in percent"), 99.5, STANDARD);
    Real drive_db   = Gain (_("Drive [dB]"), _("Set pre-filter gain to drive filter to saturation"), 0, -24, 36, 1, STANDARD ":scale");
    LadderFilterType filter = SfiEnum (_("Ladder Filter Type"), _("The filter type for the ladder filter"), LADDER_FILTER_LP4, STANDARD);
    LadderImplType impl = SfiEnum (_("Ladder Impl Type"), _("The implementation of the ladder filter"), LADDER_IMPL_LINEAR, STANDARD);
  };
};

} // Bse
